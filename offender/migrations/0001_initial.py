# Generated by Django 5.0.7 on 2024-10-19 15:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Offender',
            fields=[
                ('offender_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100, null=True)),
                ('status', models.CharField(blank=True, max_length=100, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=1500, null=True)),
                ('mobile', models.CharField(blank=True, max_length=1500, null=True)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='offender.offender', unique=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalHealth',
            fields=[
                ('effective_date', models.DateField(blank=True, null=True)),
                ('health_issue', models.CharField(blank=True, max_length=1500, null=True)),
                ('status', models.CharField(blank=True, choices=[('Active', 'Active'), ('Inactive', 'Inactive')], max_length=1000, null=True)),
                ('condition', models.CharField(blank=True, choices=[('Good', 'Good'), ('Critical', 'Critical'), ('Moderate', 'Moderate')], max_length=1000, null=True)),
                ('medical_id', models.CharField(default='', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('reported_by', models.CharField(blank=True, max_length=1000, null=True)),
                ('reported_date', models.DateField(blank=True, null=True)),
                ('incident_details', models.CharField(blank=True, max_length=1500, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('company_name', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_type', models.CharField(blank=True, max_length=100, null=True)),
                ('institute_name', models.CharField(blank=True, max_length=100, null=True)),
                ('branch', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='CourtAppointments',
            fields=[
                ('scheduled_datetime', models.DateTimeField()),
                ('reason', models.CharField(blank=True, max_length=1500, null=True)),
                ('court', models.CharField(blank=True, max_length=1000, null=True)),
                ('judge_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('assigned_officers', models.CharField(blank=True, max_length=1000, null=True)),
                ('appointment_id', models.CharField(default='', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(blank=True, choices=[('Processed', 'Processed'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Processed', max_length=1000, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='CasePlan',
            fields=[
                ('created_date_time', models.DateField(auto_now_add=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('InProgress', 'InProgress'), ('Completed', 'Completed')], max_length=100, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('officer', models.CharField(blank=True, max_length=100, null=True)),
                ('custody_location', models.CharField(blank=True, max_length=100, null=True)),
                ('result', models.CharField(blank=True, max_length=1500, null=True)),
                ('case_plan_id', models.CharField(default='', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('from_location', models.CharField(blank=True, max_length=100, null=True)),
                ('to_location', models.CharField(blank=True, max_length=100, null=True)),
                ('reason', models.CharField(blank=True, max_length=100, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='ActionPlan',
            fields=[
                ('case_worksteps', models.CharField(blank=True, max_length=1500, null=True)),
                ('category', models.CharField(blank=True, max_length=1500, null=True)),
                ('programnotes', models.CharField(blank=True, max_length=1500, null=True)),
                ('startdate', models.DateField(blank=True, null=True)),
                ('enddate', models.DateField(blank=True, null=True)),
                ('action_plan_id', models.CharField(default='', max_length=20, primary_key=True, serialize=False, unique=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_date_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('Released', 'Released'), ('In-Custody', 'In-Custody')], max_length=100, null=True)),
                ('offender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='offender.offender')),
            ],
        ),
    ]
